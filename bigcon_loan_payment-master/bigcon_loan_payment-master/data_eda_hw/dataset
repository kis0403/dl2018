
## data 생성#######
data_set = read.csv('/home/snu/Bigcontest/challenge_data/Data_set.csv',fileEncoding='euc-kr',stringsAsFactors = TRUE)

######################################################################
# ratio_LNIF는 전체 금액을 전체 건수로 나눈 비율
data_set$ratio_LNIF =data_set$TOT_LNIF_AMT/(data_set$BNK_LNIF_CNT+data_set$CPT_LNIF_CNT+data_set$SPART_LNIF_CNT+data_set$ECT_LNIF_CNT)
data_set$ratio_LNIF = ifelse(is.infinite(data_set$ratio_LNIF),997001,data_set$ratio_LNIF)
######################################################################
plot(table(data_set$ratio_LNIF))

######################################################################
# ratio_CLIF_d_LNIF
data_set$ratio_CLIF_d_LNIF =data_set$TOT_CLIF_AMT/data_set$TOT_LNIF_AMT
######################################################################

######################################################################
# ratio_BNK_d_LNIF
data_set$ratio_BNK_d_LNIF =data_set$BNK_LNIF_AMT/data_set$TOT_LNIF_AMT
######################################################################

######################################################################
# ratio_CPT_d_LNIF
data_set$ratio_CPT_d_LNIF =data_set$CPT_LNIF_AMT/data_set$TOT_LNIF_AMT
######################################################################

######################################################################
# ratio_BNK_d_N
data_set$ratio_BNK_d_N =data_set$BNK_LNIF_AMT/data_set$BNK_LNIF_CNT
data_set$ratio_BNK_d_N = ifelse(is.nan(data_set$ratio_BNK_d_N),0,data_set$ratio_BNK_d_N)
######################################################################

######################################################################
# ratio_CPT_d_N
data_set$ratio_CPT_d_N =data_set$CPT_LNIF_AMT/data_set$CPT_LNIF_CNT
data_set$ratio_CPT_d_N <- ifelse(is.nan(data_set$ratio_CPT_d_N),0,data_set$ratio_CPT_d_N)
######################################################################

######################################################################
# 제1 제2금융권 제외
data_set$except_BNK_CPT <- ifelse((data_set$SPART_LNIF_CNT+data_set$ECT_LNIF_CNT)!=0,1,0)
table(data_set$TARGET,data_set$except_BNK_CPT)
prop.table(table(data_set$TARGET,data_set$except_BNK_CPT),2)
######################################################################

######################################################################
# 전체 대출 횟수
data_set$all_loan <- data_set$BNK_LNIF_CNT+data_set$CPT_LNIF_CNT+data_set$SPART_LNIF_CNT+data_set$ECT_LNIF_CNT
######################################################################

######################################################################
# 은행대출 / 전체 대출 횟수
data_set$BNK_d_all_loan <- data_set$BNK_LNIF_CNT/data_set$all_loan
data_set$BNK_d_all_loan <- ifelse(is.nan(data_set$BNK_d_all_loan),0,data_set$BNK_d_all_loan)
######################################################################

######################################################################
# 카드사/할부사/캐피탈 / 전체 대출 횟수
data_set$CPT_d_all_loan <- data_set$CPT_LNIF_CNT/data_set$all_loan
data_set$CPT_d_all_loan <- ifelse(is.nan(data_set$CPT_d_all_loan),0,data_set$CPT_d_all_loan)
prop.table(table(data_set$TARGET,data_set$CPT_d_all_loan+data_set$BNK_d_all_loan<1),1)
######################################################################

######################################################################
# [2산업분류]/ 전체 대출 횟수
data_set$SPART_d_all_loan <- data_set$SPART_LNIF_CNT/data_set$all_loan
data_set$SPART_d_all_loan <- ifelse(is.nan(data_set$SPART_d_all_loan),0,data_set$SPART_d_all_loan)
prop.table(table(data_set$TARGET,data_set$SPART_d_all_loan>0.5),1)
######################################################################

######################################################################
# 은행, 카드사/할부사/캐피탈 제외 대출금액
data_set$except_loan <-data_set$TOT_LNIF_AMT-data_set$BNK_LNIF_AMT-data_set$CPT_LNIF_AMT
table(data_set$except_loan)
data_set$except_loan <- ifelse(data_set$except_loan<0,0,data_set$except_loan)
prop.table(table(data_set$TARGET,data_set$except_loan==0),1)
######################################################################


######################################################################
# ETC_d_all_loan
data_set$ETC_d_all_loan <- data_set$ECT_LNIF_CNT/ data_set$all_loan
######################################################################

######################################################################
# loan_type
data_set$loan_type <- data_set$ratio_BNK_d_LNIF
data_set$loan_type[which(data_set$ratio_BNK_d_LNIF>0.5 &  data_set$ratio_BNK_d_LNIF!=1)] <- 2
data_set$loan_type[(data_set$ratio_BNK_d_LNIF<=0.5 & data_set$ratio_BNK_d_LNIF!=0)] <- 3
######################################################################

######################################################################
# ratio_except_loan_d_LNIF
data_set$ratio_except_loan_d_LNIF <- data_set$except_loan / data_set$TOT_LNIF_AMT
######################################################################

######################################################################
# per_income
data_set$perincome <- data_set$HSHD_INFR_INCM/data_set$ACTL_FMLY_NUM
######################################################################

######################################################################
#log_TOT_LNIF_AMT
data_set$log_TOT_LNIF_AMT <- log(data_set$TOT_LNIF_AMT)
######################################################################

######################################################################
# SPART_LNIF_CNT_pow
data_set$SPART_LNIF_CNT_pow <- data_set$SPART_LNIF_CNT **2
######################################################################

######################################################################
# ECT_LNIF_CNT_pow
data_set$ECT_LNIF_CNT_pow <- data_set$ECT_LNIF_CNT**2
######################################################################

######################################################################
# CRDT_CARD_CNT_pow
data_set$CRDT_CARD_CNT_pow <- data_set$CRDT_CARD_CNT**2
######################################################################

######################################################################
# ratio_CNT_d_AMT
data_set$ratio_CNT_d_AMT <- data_set$all_loan / data_set$TOT_LNIF_AMT

######## modeling ############
library(caret)
library(rpart)
library(ranger)
library(foreach)
library(data.table)  #data loading
library(ggplot2)     #data EDA
library(gbm)
library(unbalanced)

set.seed(12233)



intrain<-createDataPartition(y=data_set$TARGET, p=0.7, list=FALSE) 
#data_set$TARGET<-as.factor(data_set$TARGET)
train<-data_set[intrain,-c(1)]
valid<-data_set[-intrain,-c(1)]
#train<-data_set[intrain,]
#valid<-data_set[-intrain,]



gbm_train=gbm(TARGET~.,data=train,distribution = "bernoulli",n.trees=350,shrinkage = 0.05,interaction.depth = 10,verbose = T)
n.tree=gbm.perf(gbm_train,method="OOB")
n.tree
gbm.pred=predict(gbm_train,valid,n.trees=350,num.threads=2)

outcome=data.frame()
for (i in c(1:100)) {
  gbm_boolean=ifelse(gbm.pred>2.5-i/20,0,1)
  actual_target=1-as.numeric(valid$TARGET)
  gbm_confus<-confusionMatrix(actual_target,gbm_boolean)
  res=data.frame(cut.off=2.5-i/20,Pre=gbm_confus$byClass[5],Rec=gbm_confus$byClass[6],F1=gbm_confus$byClass[7])
  outcome=rbind(outcome,res)
}
outcome


summary(gbm_train)



#######################################3

a <- summary.gbm(gbm_train)
b <-as.character(a$var[-which(a$rel.inf<0.2)])
b <- c("TARGET",b)
train_data <- data_set[,which(colnames(data_set) %in% b)]

intrain<-createDataPartition(y=train_data$TARGET, p=0.7, list=FALSE) 
#train_data$TARGET<-as.factor(train_data$TARGET)
train<-train_data[intrain,]
valid<-train_data[-intrain,]
#train<-train_data[intrain,]
#valid<-data_set[-intrain,]



gbm_train=gbm(TARGET~.,data=train,distribution = "bernoulli",n.trees=350,shrinkage = 0.05,interaction.depth = 10,verbose = T)
n.tree=gbm.perf(gbm_train,method="OOB")
n.tree
gbm.pred=predict(gbm_train,valid,n.trees=350,num.threads=2)

outcome=data.frame()
for (i in c(1:100)) {
  gbm_boolean=ifelse(gbm.pred>2.5-i/20,0,1)
  actual_target=1-as.numeric(valid$TARGET)
  gbm_confus<-confusionMatrix(actual_target,gbm_boolean)
  res=data.frame(cut.off=2.5-i/20,Pre=gbm_confus$byClass[5],Rec=gbm_confus$byClass[6],F1=gbm_confus$byClass[7])
  outcome=rbind(outcome,res)
}


